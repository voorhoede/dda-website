---
import { isBlock, isHeading, isInlineItem, isItemLink } from 'datocms-structured-text-utils';
import type { StructuredText as StructuredTextData } from 'datocms-structured-text-utils';
import type { PredicateComponentTuple } from '@components/StructuredText/StructuredText';
import StructuredText from '@components/StructuredText/StructuredText.astro';
import Block from './nodes/Block.astro';
import Heading from './nodes/Heading.astro';
import InlineItem from './nodes/InlineItem.astro';
import ItemLink from './nodes/ItemLink.astro';

interface Props {
  data: StructuredTextData | Document | null;
  components?: PredicateComponentTuple[];
}
const { data = null, components = [] } = Astro.props;
---

<div class="styled-text">
  <StructuredText 
    data={data as StructuredTextData }
    components={[
      // override default components:
      [isHeading, Heading],
      // add custom node components for records that can be embedded in structured text:
      [isBlock, Block],
      [isInlineItem, InlineItem],
      [isItemLink, ItemLink],
      // allow extension by other Astro templates using this template:
      ...components,
    ]}
  />
</div>

<style>
  .styled-text :global(h3:first-child) {
    margin-block: 0 var(--spacing-64);
  }
  
  .styled-text :global(h3),
  .styled-text :global(h4),
  .styled-text :global(h5),
  .styled-text :global(h6) {
    margin-block: 1em;
  }
  
  .styled-text :global(ul) {
    padding-inline-start: 1em;
  }
  
  .styled-text :global(li p) {
    margin-block: 0rem;
  }
</style>
