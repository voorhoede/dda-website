---
import type { AnyBlock } from './Blocks';
import EmbedBlock from './EmbedBlock/EmbedBlock.astro';
import ImageBlock from './ImageBlock/ImageBlock.astro';
import TableBlock from './TableBlock/TableBlock.astro';
import TextBlock from './TextBlock/TextBlock.astro';
import VideoEmbedBlock from './VideoEmbedBlock/VideoEmbedBlock.astro';
import CtaBlock from './CtaBlock/CtaBlock.astro';

const blocksByTypename = {
  EmbedBlockRecord: EmbedBlock,
  ImageBlockRecord: ImageBlock,
  TableBlockRecord: TableBlock,
  TextBlockRecord: TextBlock,
  VideoEmbedBlockRecord: VideoEmbedBlock,
  CtaBlockRecord: CtaBlock,
};

interface Props {
  blocks: AnyBlock[];
}
const { blocks } = Astro.props;
---

{
  blocks.map((block) => {
    const typename = block.__typename as keyof typeof blocksByTypename;
    const Block = blocksByTypename[typename];
    return Block ? (
      // @ts-ignore next line
      <Block block={block} />
    ) : (
      <script define:vars={{ typename }} is:inline>
        console.log(`No Block found for "${typename}"`);
      </script>
    );
  })
}
