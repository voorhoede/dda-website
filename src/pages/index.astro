---
import { VacancyDataList } from '@components/VacancyDataList';
import { MemberParade } from '@components/MemberParade';
import { PartnerBanner } from '@blocks/PartnerBanner';
import { NewsLetterForm } from '@blocks/NewLetterForm';
import { Button } from '@components/Button';
import { EventsSection } from '@components/EventsSection';
import { Column, Grid } from '@components/Grid';
import { Heading } from '@components/Heading';
import { CtaBanner } from '@components/CtaBanner';
import { PublicationsSection } from '@components/PublicationsSection';
import {
  PageTitle,
  PageTitleContent,
  PageTitleFooter,
  PageTitleHeader,
} from '@components/PageTitle';
import PreviewModeSubscription from '@components/PreviewMode/PreviewModeSubscription.astro';
import { Tag } from '@components/Tag';
import {
  TitleSection,
  TitleSectionContent,
  TitleSectionFooter,
} from '@components/TitleSection';
import Layout from '@layouts/Default.astro';
import { datocmsRequest } from '@lib/datocms';
import { defaultLocale, locales } from '@lib/i18n';
import type { HomePageQuery } from '@lib/types/datocms';
import type { PageUrl } from '@lib/types/page-url';
import query from './_index.query.graphql';

export const prerender = true;

export async function getStaticPaths() {
  return locales.map((locale) => ({ params: { locale } }));
}

const { locale = defaultLocale } = Astro.params;

const variables = {
  locale,
};

const {
  page,
  membersCta,
  membersParade,
  events,
  vacancies,
  publications,
  partners,
} = await datocmsRequest<NonNullable<HomePageQuery>>({
  query,
  variables,
});

const pageUrls = locales.map((locale) => ({
  locale,
  pathname: `/${locale}/`,
})) as PageUrl[];
---

{
  page ? (
    <Layout pageUrls={pageUrls} seoMetaTags={page._seoMetaTags}>
      <PreviewModeSubscription query={query} variables={variables} />
      <PageTitle spacious>
        <PageTitleHeader spacious>
          <Heading level={1}>{page.title}</Heading>
        </PageTitleHeader>
        <PageTitleContent>
          <Heading displayLevel={6} level="p">
            {page.subtitle.replace('{{number}}', '123')}
          </Heading>
        </PageTitleContent>
        <PageTitleFooter>
          <Button as="a" icon="arrow-right" variant="large">
            {page.becomeMemberCtaLabel}
          </Button>
          <Button
            as="a"
            height="narrow"
            icon="arrow-right"
            level="secondary"
            variant="large"
          >
            {page.findAgencyCtaLabel}
          </Button>
        </PageTitleFooter>
      </PageTitle>
      <Grid border={true}>
        <Column span={12}>
          <MemberParade members={membersParade} />
        </Column>
      </Grid>
      {events.length > 0 && (
        <>
          <TitleSection>
            <TitleSectionContent>
              <Tag>{page.eventsSectionLabel}</Tag>
              <Heading level={2}>{page.eventsSectionTitle}</Heading>
            </TitleSectionContent>
            <TitleSectionFooter>
              <Button
                as="a"
                height="narrow"
                icon="arrow-right"
                level="secondary"
                variant="large"
              >
                {page.eventsSectionCtaLabel}
              </Button>
            </TitleSectionFooter>
          </TitleSection>
          <EventsSection events={events} />
        </>
      )}
      {vacancies.length > 0 && (
        <>
          <TitleSection>
            <TitleSectionContent>
              <Tag>{page.vacanciesSectionLabel}</Tag>
              <Heading level={2}>{page.vacanciesSectionTitle}</Heading>
            </TitleSectionContent>
            <TitleSectionFooter>
              <Button
                as="a"
                height="narrow"
                icon="arrow-right"
                level="secondary"
                variant="large"
              >
                {page.vacanciesSectionCtaLabel}
              </Button>
            </TitleSectionFooter>
          </TitleSection>
          <VacancyDataList vacancies={vacancies} />
        </>
      )}
      {publications.length > 0 && (
        <>
          <TitleSection>
            <TitleSectionContent>
              <Tag>{page.publicationsSectionLabel}</Tag>
              <Heading level={2}>{page.publicationsSectionTitle}</Heading>
            </TitleSectionContent>
            <TitleSectionFooter>
              <Button
                as="a"
                height="narrow"
                icon="arrow-right"
                level="secondary"
                variant="large"
              >
                {page.publicationsSectionCtaLabel}
              </Button>
            </TitleSectionFooter>
          </TitleSection>
          <PublicationsSection publications={publications} />
        </>
      )}
      <NewsLetterForm />
      <CtaBanner members={membersCta} message={page.ctaSectionMessage}>
        <Heading level={2}>{page.ctaSectionTitle}</Heading>
        <Button as="a" href="/word-lid" icon="arrow-right">
          {page.ctaSectionCtaLabel}
        </Button>
      </CtaBanner>
      <PartnerBanner partners={partners} />
    </Layout>
  ) : (
    <p>Page not found</p>
  )
}
