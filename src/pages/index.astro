---
export const prerender = false;

import { NewsLetterForm } from '@blocks/NewsLetterForm';
import { Button } from '@components/Button';
import { EventsSection } from '@components/EventsSection';
import { Column, Grid } from '@components/Grid';
import { Heading } from '@components/Heading';
import { PublicationsSection } from '@components/PublicationsSection';
import PageHeader from '@blocks/PageHeader/PageHeader.astro';
import { PartnerBanner } from '@blocks/PartnerBanner';
import CtaBanner from '@blocks/CtaBanner/CtaBanner.astro';
import MemberParade from '@blocks/MemberParade/MemberParade.astro';
import HighlightedVacancies from '@blocks/HighlightedVacancies/HightlightedVacancies.astro';
import PreviewModeSubscription from '@components/PreviewMode/PreviewModeSubscription.astro';
import { Tag } from '@components/Tag';
import {
  TitleSection,
  TitleSectionContent,
  TitleSectionFooter,
} from '@components/TitleSection';
import Layout from '@layouts/Default.astro';
import { datocmsRequest } from '@lib/datocms';
import { defaultLocale } from '@lib/i18n';
import { setCacheControl } from '@lib/cache-control';
import type { HomePageQuery } from '@lib/types/datocms';
import { getToday } from '@lib/date';
import query from './_index.query.graphql';

setCacheControl(Astro.response);

const { locale = defaultLocale } = Astro.params;

const variables = {
  locale,
  today: getToday(),
};

const { page, events, publications } = await datocmsRequest<
  NonNullable<HomePageQuery>
>({
  query,
  variables,
});

if (!page) {
  return new Response(null, { status: 404 });
}
---

<Layout pageUrls={[]} seoMetaTags={page._seoMetaTags}>
  <PreviewModeSubscription query={query} variables={variables} />
  <PageHeader
    title={page.header.title}
    subtitle={page.header.subtitle}
    spacious
  >
    <Fragment slot="footer">
      <Button as="a" icon="arrow-right" variant="large" href="/lid-worden/">
        {page.becomeMemberCtaLabel}
      </Button>
      <Button
        as="a"
        height="narrow"
        icon="arrow-right"
        level="secondary"
        variant="large"
        href="/leden/"
      >
        {page.findAgencyCtaLabel}
      </Button>
    </Fragment>
  </PageHeader>
  <Grid border={true}>
    <Column span={12}>
      <MemberParade server:defer />
    </Column>
  </Grid>
  {
    events.length > 0 && (
      <Grid as="section" border={true}>
        <Column span={12}>
          <TitleSection>
            <TitleSectionContent>
              <Tag>{page.eventsSectionLabel}</Tag>
              <Heading level={2}>{page.eventsSectionTitle}</Heading>
            </TitleSectionContent>
            <TitleSectionFooter>
              <Button
                as="a"
                height="narrow"
                icon="arrow-right"
                level="secondary"
                variant="large"
                href="/events/"
              >
                {page.eventsSectionCtaLabel}
              </Button>
            </TitleSectionFooter>
          </TitleSection>
          <EventsSection events={events} />
        </Column>
      </Grid>
    )
  }
  <TitleSection>
    <TitleSectionContent>
      <Tag>{page.vacanciesSectionLabel}</Tag>
      <Heading level={2}>{page.vacanciesSectionTitle}</Heading>
    </TitleSectionContent>
    <TitleSectionFooter>
      <Button
        as="a"
        height="narrow"
        icon="arrow-right"
        level="secondary"
        variant="large"
        href="/vacatures/"
      >
        {page.vacanciesSectionCtaLabel}
      </Button>
    </TitleSectionFooter>
  </TitleSection>
  <HighlightedVacancies server:defer />
  {
    publications.length > 0 && (
      <Grid as="section" border={true}>
        <Column span={12}>
          <TitleSection>
            <TitleSectionContent>
              <Tag>{page.publicationsSectionLabel}</Tag>
              <Heading level={2}>{page.publicationsSectionTitle}</Heading>
            </TitleSectionContent>
            <TitleSectionFooter>
              <Button
                as="a"
                height="narrow"
                icon="arrow-right"
                level="secondary"
                variant="large"
                href="/publicaties/"
              >
                {page.publicationsSectionCtaLabel}
              </Button>
            </TitleSectionFooter>
          </TitleSection>
          <PublicationsSection publications={publications} />
        </Column>
      </Grid>
    )
  }
  <NewsLetterForm />
  <CtaBanner message={page.ctaSectionMessage}>
    <Heading level={2}>{page.ctaSectionTitle}</Heading>
    <Button as="a" href="/lid-worden/" icon="arrow-right">
      {page.ctaSectionCtaLabel}
    </Button>
  </CtaBanner>
  <PartnerBanner />
</Layout>
