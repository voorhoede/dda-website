---
import { setCacheControl } from '@lib/cache-control';
import { datocmsRequest } from '@lib/datocms';
import { t } from '@lib/i18n';
import type {
  MemberLogoFragment,
  MemberPageQuery,
  SiteLocale,
} from '@lib/types/datocms';

import memberPageQuery from './_memberPage.query.graphql';

import Layout from '@layouts/Default.astro';

import { CaseBlock } from '@blocks/CaseBlock/CaseBlock';
import { ContactBlock } from '@blocks/ContactBlock/ContactBlock';
import PartnerBanner from '@blocks/PartnerBanner/PartnerBanner.astro';
import TextBlock from '@blocks/TextBlock/TextBlock.astro';
import { VacancyDataList } from '@components/VacancyDataList';
import PreviewModeSubscription from '@components/PreviewMode/PreviewModeSubscription.astro';

import { Button } from '@components/Button';
import { Column, Grid, type SpanOptions } from '@components/Grid';
import { Heading } from '@components/Heading';
import { PageTitle, PageTitleHeader } from '@components/PageTitle';
import { SRCImage } from 'react-datocms';
import { MemberLogo } from '@blocks/MemberLogo';

setCacheControl(Astro.response);

const { locale, slug } = Astro.params as { locale: SiteLocale; slug: string };
const { page, logo } = await datocmsRequest<MemberPageQuery>({
  query: memberPageQuery,
  variables: { locale, slug },
});

if (!page) {
  return new Response(null, { status: 404 });
}
---

<Layout pageUrls={[]} seoMetaTags={page._seoMetaTags}>
  <PreviewModeSubscription
    query={memberPageQuery}
    variables={{ locale, slug }}
  />
  <PageTitle>
    <PageTitleHeader>
      <Button
        as="a"
        href="../"
        className="back-button"
        level="tertiary"
        icon="arrow-left"
        iconPosition="left">{t('back_to_members')}</Button
      >
      <Heading level={1}>{page.name}</Heading>
    </PageTitleHeader>
  </PageTitle>

  {
    page.banner?.responsiveImage && (
      <div class="banner">
        <SRCImage
          pictureClassName="banner__picture"
          imgClassName="banner__image"
          imgStyle={{ maxWidth: '100%', maxHeight: '776px' }}
          data={page.banner.responsiveImage}
          priority={true}
        />
      </div>
    )
  }

  <Grid className="agency">
    <Column
      as="section"
      className="agency-info"
      span={{ mobile: 12, tablet: 5 }}
    >
      <h2 class="a11y-sr-only">{t('agency_info')}</h2>

      <MemberLogo
        {...logo as MemberLogoFragment}
        className="agency-info__logo"
      />

      <div class="agency-info__data">
        <p class="text-semibold">{page.name}</p>
        <p>{page.location}</p>
        <p>
          {
            t('count_employees', {
              count: t(`count_employees_${page.employees}`),
            })
          }
        </p>
      </div>

      <div>
        <Button
          as="a"
          href={page.website as string}
          icon="arrow-right"
          target="_blank"
        >
          {t('go_to_website')}
        </Button>
      </div>
    </Column>

    <Column
      as="section"
      className="text-section"
      span={{ mobile: 12, tablet: 7 }}
    >
      {
        page.introText && (
          <Heading level={2} displayLevel={3}>
            {page.introText}
          </Heading>
        )
      }

      <TextBlock block={page.text} />
    </Column>
  </Grid>

  <section>
    <header class="vacancies__header">
      <Heading level={2}>
        {t('vacancies')}
      </Heading>
      <div>
        <Button as="a" href="/vacatures/" icon="arrow-right">
          {t('view_all')}
        </Button>
      </div>
    </header>
    {
      page.vacancies.length > 0 ? (
        <VacancyDataList vacancies={page.vacancies} />
      ) : (
        <div class="vacancies__fallback">
          <p>{t('at_this_moment_this_agency_has_no_vacancies')}</p>
        </div>
      )
    }
  </section>

  {
    page.cases.length > 0 && (
      <section>
        <header class="cases__header">
          <Heading level={2}>{t('cases')}</Heading>
        </header>
        <Grid border={true}>
          {page.cases.map((block) => (
            <Column
              className="cases-item"
              span={{ mobile: 12, tablet: 6, desktop: 4 }}
            >
              <CaseBlock block={block} />
            </Column>
          ))}
        </Grid>
      </section>
    )
  }

  {
    page.contact.length > 0 && (
      <section class="contact">
        <header class="contact__header">
          <Heading level={2}>{t('contact')}</Heading>
        </header>
        <Grid columnGap={24} rowGap={48}>
          {page.contact.map((block) => (
            <Column
              span={{
                mobile: 12,
                tablet: 6,
                desktop: Math.floor(
                  12 / Math.min(page.contact.length, 4)
                ) as SpanOptions,
              }}
            >
              <ContactBlock block={block} />
            </Column>
          ))}
        </Grid>
      </section>
    )
  }

  <PartnerBanner />
</Layout>

<style>
  .back-button {
    margin-block-end: var(--spacing-16);
  }

  .banner :global(.banner__picture) {
    width: 100%;
    display: block;
    line-height: 0;
  }

  .banner :global(.banner__image) {
    border: 1px solid var(--color-black);
    max-height: 776px;
    object-fit: cover;
  }

  .agency {
    padding: var(--spacing-40) var(--spacing-16);
  }

  .agency-info {
    display: none;
  }

  .agency-info :global(.agency-info__logo) {
    width: 192px;
    height: 192px;
  }

  .agency-info__data p {
    margin: 0px;
  }

  .text-section {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-48);
  }

  .vacancies__header,
  .cases__header {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    gap: var(--spacing-24);
    padding: var(--spacing-48) var(--spacing-24);
    border-block-end: 1px solid var(--color-black);
    box-shadow: 0 -1px 0 0 var(--color-black);
  }

  .vacancies__fallback {
    padding: var(--spacing-104) var(--spacing-48);
  }

  .vacancies__fallback p {
    margin: 0px;
    text-align: center;
  }

  .contact {
    padding: var(--spacing-96) var(--spacing-24);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-48);
    box-shadow: 0 -1px 0 0 var(--color-black);
  }

  @media screen and (min-width: 481px) {
    .agency {
      padding: var(--spacing-48);
      padding-block-end: var(--spacing-96);
    }

    .vacancies__header,
    .cases__header {
      padding: var(--spacing-48);
    }

    .contact {
      padding: var(--spacing-96) var(--spacing-48);
    }
  }

  @media screen and (min-width: 890px) {
    .banner {
      padding-inline: var(--spacing-48);
    }

    .agency-info {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-24);
    }

    .text-section {
      gap: var(--spacing-64);
    }

    .vacancies__header,
    .cases__header {
      align-items: center;
      flex-direction: row;
      justify-content: space-between;
    }

    .contact {
      padding: var(--spacing-96) var(--spacing-48);
    }
  }
</style>
