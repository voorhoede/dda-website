---
import { datocmsRequest } from '@lib/datocms';
import type { HomePageQuery } from '@lib/types/datocms';
import type { PageUrl } from '@lib/types/page-url';
import { locales } from '@lib/i18n';
import Layout from '@layouts/Default.astro';
import Blocks from '@blocks/Blocks.astro';
import MemberParade from '@blocks/MemberParade/MemberParade.astro';
import type { AnyBlock } from '@blocks/Blocks';
import { Grid, Column } from '@components/Grid';
import { Heading } from '@components/Heading';
import PreviewModeSubscription from '@components/PreviewMode/PreviewModeSubscription.astro';
import query from './_index.query.graphql';

export async function getStaticPaths() {
  return locales.map((locale) => ({ params: { locale } }));
}

const { locale } = Astro.params;

const variables = {
  locale,
};

const { page, members } = await datocmsRequest<NonNullable<HomePageQuery>>({
  query,
  variables,
});

const pageUrls = locales.map((locale) => ({
  locale,
  pathname: `/${locale}/`,
})) as PageUrl[];
---

{
  page ? (
    <Layout pageUrls={pageUrls} seoMetaTags={page._seoMetaTags}>
      <PreviewModeSubscription query={query} variables={variables} />
      <Heading level={1}>{page.title}</Heading>
      <Blocks blocks={page.bodyBlocks as AnyBlock[]} />
      <Grid border={true}>
        <Column span={12}>
          <MemberParade members={members} />
        </Column>
      </Grid>
    </Layout>
  ) : (
    <p>Page not found</p>
  )
}
