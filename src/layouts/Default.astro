---
import { getImage } from 'astro:assets';
import type {
  DefaultLayoutQuery,
  Site,
  SiteLocale,
  Tag as MetaTag,
} from '@lib/types/datocms';
import { datocmsRequest } from '@lib/datocms';
import { defaultLocale } from '@lib/i18n';
import { Footer } from '@components/Footer';
import { Header } from '@components/Header';
import Breadcrumbs from '@components/Breadcrumbs/Breadcrumbs.astro';
import IconSprite from '@components/Icon/IconSprite.astro';
import PreviewModeProvider from '@components/PreviewMode/PreviewModeProvider.astro';
import SeoHead from '@components/SeoHead.astro';
import SkipLink from '@components/SkipLink/SkipLink.astro';
import StructuredData from '@components/StructuredData/StructuredData.astro';
import type { Breadcrumb } from '@components/Breadcrumbs';
import type { PageUrl } from '@lib/seo';
import '@assets/a11y.css';
import '@assets/core.css';
import '@assets/layout.css';
import '@assets/typography.css';
import faviconSrc from '@assets/favicon.png';
import query from './default.query.graphql';

interface Props {
  breadcrumbs?: Breadcrumb[];
  pageUrls: PageUrl[];
  seoMetaTags: MetaTag[];
}

const favicon = await getImage({
  src: faviconSrc,
  width: 32,
  height: 32,
  format: 'png',
});

const { locale = defaultLocale as SiteLocale } = Astro.params as {
  locale?: SiteLocale;
};

const data = (await datocmsRequest<DefaultLayoutQuery>({
  query,
  variables: { locale },
})) as { site: Site };
const { breadcrumbs = [], pageUrls, seoMetaTags } = Astro.props;
const mainContentId = 'content';
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <StructuredData />
    <SeoHead
      pageUrls={pageUrls}
      tags={[...data.site.faviconMetaTags, ...seoMetaTags]}
    />
    <link rel="icon" href={favicon.src} type="image/png" />
  </head>
  <body>
    <PreviewModeProvider>
      <div class="main-container">
        <SkipLink targetId={mainContentId} />
        <Header client:load />

        {breadcrumbs.length > 0 && <Breadcrumbs items={breadcrumbs} />}
        {
          /* main element requires tabindex to be focusable, see SkipLink/README.md */
        }

        <main id={mainContentId} tabindex="-1">
          <slot />
        </main>
        <Footer />
      </div>
      <IconSprite />
    </PreviewModeProvider>
  </body>
</html>
