---
import { type GapOptions, type ResponsiveGapOptions, formatGap } from './util';
import clsx from 'clsx';

interface Props {
  gap?: ResponsiveGapOptions | GapOptions;
  columnGap?: ResponsiveGapOptions | GapOptions;
  rowGap?: ResponsiveGapOptions | GapOptions;
  class?: string;
  border?: boolean;
  [key: string]: any;
}

const {
  gap,
  columnGap,
  rowGap,
  class: className,
  border,
  ...rest
} = Astro.props;

const { desktop, tablet, mobile } = formatGap({ gap, rowGap, columnGap });

const classes = clsx(className, 'grid', {
  [`grid--row-gap-mobile-${mobile.rowGap}`]: mobile.rowGap,
  [`grid--row-gap-tablet-${tablet.rowGap}`]: tablet.rowGap,
  [`grid--row-gap-desktop-${desktop.rowGap}`]: desktop.rowGap,
  [`grid--column-gap-mobile-${mobile.columnGap}`]: mobile.columnGap,
  [`grid--column-gap-tablet-${tablet.columnGap}`]: tablet.columnGap,
  [`grid--column-gap-desktop-${desktop.columnGap}`]: desktop.columnGap,
  ['grid--border']: border,
});
---

<div class={classes} {...rest}>
  <slot />
</div>

<style>
  .grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    inline-size: 100%;
  }

  .grid--row-gap-mobile-xxs {
    row-gap: var(--spacing-4);
  }

  .grid--row-gap-mobile-xs {
    row-gap: var(--spacing-8);
  }

  .grid--row-gap-mobile-s {
    row-gap: var(--spacing-12);
  }

  .grid--row-gap-mobile-m {
    row-gap: var(--spacing-16);
  }

  .grid--row-gap-mobile-l {
    row-gap: var(--spacing-24);
  }

  .grid--row-gap-mobile-xl {
    row-gap: var(--spacing-32);
  }

  .grid--row-gap-mobile-xxl {
    row-gap: var(--spacing-48);
  }

  .grid--row-gap-mobile-3-xl {
    row-gap: var(--spacing-64);
  }

  .grid--row-gap-mobile-4-xl {
    row-gap: var(--spacing-96);
  }

  .grid--column-gap-mobile-xxs {
    column-gap: var(--spacing-4);
  }

  .grid--column-gap-mobile-xs {
    column-gap: var(--spacing-8);
  }

  .grid--column-gap-mobile-s {
    column-gap: var(--spacing-12);
  }

  .grid--column-gap-mobile-m {
    column-gap: var(--spacing-16);
  }

  .grid--column-gap-mobile-l {
    column-gap: var(--spacing-24);
  }

  .grid--column-gap-mobile-xl {
    column-gap: var(--spacing-32);
  }

  .grid--column-gap-mobile-xxl {
    column-gap: var(--spacing-48);
  }

  .grid--column-gap-mobile-3-xl {
    column-gap: var(--spacing-64);
  }

  .grid--column-gap-mobile-4-xl {
    column-gap: var(--spacing-96);
  }

  @media screen and (min-width: 481px) {
    .grid--row-gap-tablet-xxs {
      row-gap: var(--spacing-4);
    }

    .grid--row-gap-tablet-xs {
      row-gap: var(--spacing-8);
    }

    .grid--row-gap-tablet-s {
      row-gap: var(--spacing-12);
    }

    .grid--row-gap-tablet-m {
      row-gap: var(--spacing-16);
    }

    .grid--row-gap-tablet-l {
      row-gap: var(--spacing-24);
    }

    .grid--row-gap-tablet-xl {
      row-gap: var(--spacing-32);
    }

    .grid--row-gap-tablet-xxl {
      row-gap: var(--spacing-48);
    }

    .grid--row-gap-tablet-3-xl {
      row-gap: var(--spacing-64);
    }

    .grid--row-gap-tablet-4-xl {
      row-gap: var(--spacing-96);
    }

    .grid--column-gap-tablet-xxs {
      column-gap: var(--spacing-4);
    }

    .grid--column-gap-tablet-xs {
      column-gap: var(--spacing-8);
    }

    .grid--column-gap-tablet-s {
      column-gap: var(--spacing-12);
    }

    .grid--column-gap-tablet-m {
      column-gap: var(--spacing-16);
    }

    .grid--column-gap-tablet-l {
      column-gap: var(--spacing-24);
    }

    .grid--column-gap-tablet-xl {
      column-gap: var(--spacing-32);
    }

    .grid--column-gap-tablet-xxl {
      column-gap: var(--spacing-48);
    }

    .grid--column-gap-tablet-3-xl {
      column-gap: var(--spacing-64);
    }

    .grid--column-gap-tablet-4-xl {
      column-gap: var(--spacing-96);
    }
  }

  @media screen and (min-width: 768px) {
    .grid--row-gap-desktop-xxs {
      row-gap: var(--spacing-4);
    }

    .grid--row-gap-desktop-xs {
      row-gap: var(--spacing-8);
    }

    .grid--row-gap-desktop-s {
      row-gap: var(--spacing-12);
    }

    .grid--row-gap-desktop-m {
      row-gap: var(--spacing-16);
    }

    .grid--row-gap-desktop-l {
      row-gap: var(--spacing-24);
    }

    .grid--row-gap-desktop-xl {
      row-gap: var(--spacing-32);
    }

    .grid--row-gap-desktop-xxl {
      row-gap: var(--spacing-48);
    }

    .grid--row-gap-desktop-3-xl {
      row-gap: var(--spacing-64);
    }

    .grid--row-gap-desktop-4-xl {
      row-gap: var(--spacing-96);
    }

    .grid--column-gap-desktop-xxs {
      column-gap: var(--spacing-4);
    }

    .grid--column-gap-desktop-xs {
      column-gap: var(--spacing-8);
    }

    .grid--column-gap-desktop-s {
      column-gap: var(--spacing-12);
    }

    .grid--column-gap-desktop-m {
      column-gap: var(--spacing-16);
    }

    .grid--column-gap-desktop-l {
      column-gap: var(--spacing-24);
    }

    .grid--column-gap-desktop-xl {
      column-gap: var(--spacing-32);
    }

    .grid--column-gap-desktop-xxl {
      column-gap: var(--spacing-48);
    }

    .grid--column-gap-desktop-3-xl {
      column-gap: var(--spacing-64);
    }

    .grid--column-gap-desktop-4-xl {
      column-gap: var(--spacing-96);
    }
  }

  /* specific border styles */
  .grid--border {
    /* reserve space for border added in the selector below */
    gap: 1px;
  }

  .grid--border > :global(.column) {
    /* using box-shadow to avoid double border */
    box-shadow: 0 0 0 1px black;
  }
</style>
